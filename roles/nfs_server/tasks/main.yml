---

- name: Install Amazon-Linux-specific NFS packages
  ansible.builtin.include_tasks: "{{ ansible_distribution | lower }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution | lower == 'amazon'

- name: Install Ubuntu/Debian-specific NFS packages
  ansible.builtin.include_tasks: "{{ ansible_distribution | lower }}.yml"
  when: ansible_distribution | lower != 'amazon'

- name: Create mountpoint
  ansible.builtin.file:
    path: "{{ atl_shared_mountpoint }}"
    state: directory

- name: Setup the disk partition
  community.general.parted:
    device: "{{ atl_nfs_server_device }}"
    label: gpt
    name: "{{ atl_nfs_fs_label }}"
    number: 1
    flags:
      - "{{ atl_nfs_fs_type }}"
  tags:
    - new_only


- name: Create the filesystem
  community.general.filesystem:
    dev: "{{ atl_nfs_server_device }}"
    fstype: "{{ atl_nfs_fs_type }}"
    opts: "-L {{ atl_nfs_fs_label }}"
  tags:
    - new_only

- name: Setup fstab and mount the filesystem
  ansible.posix.mount:
    path: "{{ atl_shared_mountpoint }}"
    src: "LABEL={{ atl_nfs_fs_label }}"
    fstype: "{{ atl_nfs_fs_type }}"
    opts: defaults,nofail
    passno: "2"
    state: mounted


- name: Create the shared home
  ansible.builtin.file:
    path: "{{ atl_shared_mountpoint }}/{{ atl_product_user }}/shared"
    state: directory
    owner: "{{ atl_product_user }}"
    group: "{{ atl_product_user }}"
    mode: 0750
  tags:
    - new_only


- name: Create the NFS export file
  ansible.builtin.template:
    src: "media-atl.exports.j2"
    dest: "/etc/exports.d/20-media-atl.exports"
  notify:
    - Restart NFS

- name: Enable NFS
  ansible.builtin.service:
    name: "{atl_nfs_service_name}"
    enabled: true
    state: started
